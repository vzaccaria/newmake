// Generated by LiveScript 1.3.1
(function(){
  var debug, glob, uid, _module, join$ = [].join;
  debug = require('debug')('newmake/packs');
  glob = require('glob');
  uid = require('uid');
  _module = function(){
    var iface;
    iface = {
      livescript: function(dir, deps){
        var command, product;
        command = function(_){
          return "lsc -c " + _.source + " -o " + _.product;
        };
        product = function(_){
          return _.source.replace(/\..*/, '.js') + "";
        };
        return this.compileFiles(command, product, glob.sync(dir));
      },
      sixToFive: function(dir, deps){
        var command, product;
        command = function(_){
          return "6to5 " + _.source + " -o " + _.product;
        };
        product = function(_){
          return _.source.replace(/\..*/, '.js') + "";
        };
        return this.compileFiles(command, product, glob.sync(dir));
      },
      concat: function(body){
        var command, product;
        command = function(_){
          return "cat " + join$.call(_.sources, ' ') + " > " + _.product;
        };
        product = function(_){
          return "concat-" + uid(4) + ".js";
        };
        return this.reduceFiles(command, product, body);
      },
      toFile: function(name, body){
        var command, product;
        command = function(_){
          return "cp " + join$.call(_.sources, ' ') + " " + _.product;
        };
        product = function(_){
          return name;
        };
        return this.reduceFiles(command, product, body);
      }
    };
    return iface;
  };
  module.exports = _module();
}).call(this);
